网络编程
    IP地址：标示网络上的一台主机 逻辑地址
    mac地址：标示网络上的一台主机 物理地址
        区别：是否可以更换
   网络通信：进程间的通信，两台主机上的两个进程间的通信
   网络连接：进程间信号的连接，每个进程可以独立的与另外多进程通信
    端口：用来标识主机中的一个进程（0~65535,0~1024预留端口）
        ① 连接：通过IP找到一台主机，利用端口号确定某个进程
        ② 绑定进程：一个端口只能绑定一个进程
        ③ 监听:等待进程连接
    协议：通信双方之间的约定和标准
    物理->数据链路->网络->传输->会话->表示->应用
        层层连接，子上而下，下层往上层提供服务，上层使用下层的服务。
    传输层协议：
        TCP：传输控制协议  面向连接的 可靠的  效率低（一对一）
        UDP：用户数据报协议  非面向连接的  不可靠的  效率高 （广播）
    *TCP编程
        JAVA中基于socket编程
        socket：编程模型（套接字）
        例如：Ip：电话号码；Port：分机号；socket：电话机;->Ip+Port=Socket(唯一)
    客户端<---->服务器
    socket：IO编程
    服务器-->输出流  客户端-->输入流  ==>下载
    服务器-->输入流  客户端-->输入流  ==>上传
    ① 启动服务器 进入监听状态
    ② 启动客户端
    ③ IO编程
        1>创建节点流
        2>封装过滤流
        3>传输数据
        4>关闭流
    服务器为多个客户端提供服务-->同时提供服务-->多线程
    *UDP编程
        JAVA中基于socket编程
        DatagramSocket/DatagramPacket
        同时具有信和信封。receive/send
        TCP和UDP都是协议，端口只与协议有关。所以在不同协议同一端口不冲突
        getLocalHost:本台主机
    *URL编程
       应用层编程   URL：统一资源定位器
       URL格式结构：协议名：//主机名：端口号/相对路径
       http协议默认端口号：80
       用编程的方式访问URL
